# 
# Copyright (C) 2015-2017 Georg Bartels <georg.bartels@cs.uni-bremen.de>
# 
# This file is part of giskard.
# 
# giskard is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 

frame-mul:
  # torso_lift_link --> l_shoulder_pan_link
  # 
  # URDF DATA:
  #  <joint name="l_shoulder_pan_joint" type="revolute">
  #    <axis xyz="0 0 1"/>
  #    <origin rpy="0 0 0" xyz="0.0 0.188 0.0"/>
  #    <!-- transform from parent link to this joint frame -->
  #    <parent link="torso_lift_link"/>
  #    <child link="l_shoulder_pan_link"/>
  #  </joint>
  - frame:
    - {axis-angle: [{vector3: [0, 0, 1]}, {input-joint: l_shoulder_pan_joint}]} # l_shoulder_pan_joint
    - {vector3: [0.0, 0.188, 0.0]}


  # l_shoulder_pan_link -->  l_shoulder_lift_link
  # 
  # URDF DATA:
  #  <joint name="l_shoulder_lift_joint" type="revolute">
  #    <axis xyz="0 1 0"/>
  #    <origin rpy="0 0 0" xyz="0.1 0 0"/>
  #    <parent link="l_shoulder_pan_link"/>
  #    <child link="l_shoulder_lift_link"/>
  #  </joint>
  - frame:
    - {axis-angle: [{vector3: [0, 1, 0]}, {input-joint: l_shoulder_lift_joint}]} # l_shoulder_lift_joint
    - {vector3: [0.1, 0, 0]}


  # l_shoulder_lift_link --> l_upper_arm_roll_link
  # 
  # URDF DATA:
  #  <joint name="l_upper_arm_roll_joint" type="revolute">
  #    <axis xyz="1 0 0"/>
  #    <origin rpy="0 0 0" xyz="0 0 0"/>
  #    <parent link="l_shoulder_lift_link"/>
  #    <child link="l_upper_arm_roll_link"/>
  #  </joint>
  - frame:
    - {axis-angle: [{vector3: [1, 0, 0]}, {input-joint: l_upper_arm_roll_joint}]} # l_upper_arm_roll_joint
    - {vector3: [0, 0, 0]}


  # l_upper_arm_roll_link --> l_elbow_flew_link
  # 
  # URDF DATA: missing identiy transform
  #  <joint name="l_elbow_flex_joint" type="revolute">
  #    <axis xyz="0 1 0"/>
  #    <origin rpy="0 0 0" xyz="0.4 0 0"/>
  #    <parent link="l_upper_arm_link"/>
  #    <child link="l_elbow_flex_link"/>
  #  </joint>
  - frame:
    - {axis-angle: [{vector3: [0, 1, 0]}, {input-joint: l_elbow_flex_joint}]} # l_elbow_flex_joint
    - {vector3: [0.4, 0, 0]}

  # l_elbow_flew_link --> l_forearm_roll_link
  # 
  # URDF DATA:
  #  <joint name="l_forearm_roll_joint" type="continuous">
  #    <axis xyz="1 0 0"/>
  #    <origin rpy="0 0 0" xyz="0 0 0"/>
  #    <parent link="l_elbow_flex_link"/>
  #    <child link="l_forearm_roll_link"/>
  #  </joint>
  - frame:
    - {axis-angle: [{vector3: [1, 0, 0]}, {input-joint: l_forearm_roll_joint}]} # l_forearm_roll_joint
    - {vector3: [0, 0, 0]}


  # l_forearm_roll_link --> l_wrist_flex_link
  # 
  # URDF DATA: missing identity transform
  #  <joint name="l_wrist_flex_joint" type="revolute">
  #    <axis xyz="0 1 0"/>
  #    <origin rpy="0 0 0" xyz="0.321 0 0"/>
  #    <parent link="l_forearm_link"/>
  #    <child link="l_wrist_flex_link"/>
  #  </joint>
  - frame:
    - {axis-angle: [{vector3: [0, 1, 0]}, {input-joint: l_wrist_flex_joint}]} # l_wrist_flex_joint
    - {vector3: [0.321, 0, 0]}

  # l_wrist_flex_link --> l_wrist_roll_link
  # 
  # URDF DATA:
  #  <joint name="l_wrist_roll_joint" type="continuous">
  #    <axis xyz="1 0 0"/>
  #    <origin rpy="0 0 0" xyz="0 0 0"/>
  #    <parent link="l_wrist_flex_link"/>
  #    <child link="l_wrist_roll_link"/>
  #  </joint>
  - frame:
    - {axis-angle: [{vector3: [1, 0, 0]}, {input-joint: l_wrist_roll_joint}]} # l_wrist_roll_joint
    - {vector3: [0, 0, 0]}
